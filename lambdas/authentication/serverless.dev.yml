service: authentication

frameworkVersion: "3"

provider:
  name: aws
  runtime: python3.9
  architecture: arm64
  stage: dev
  region: us-east-1
  stackName: ${self:provider.stage}-sls-${self:service}
  deploymentBucket:
    name: ${self:provider.stage}-sls-authentication
  iam:
    role: ${ssm:/terraform/shared/iam/lambda_role_arn}
  apiGateway:
    restApiId: ${ssm:/terraform/${self:provider.stage}/api_gateway/id}
    restApiRootResourceId: ${ssm:/terraform/${self:provider.stage}/api_gateway/root_resource_id}
  ecr:
    images:
      default:
        path: ./
        file: Dockerfile
        buildArgs:
  environment:
    ENVIRONMENT: ${self:provider.stage}
    JWT_SECRET_KEY: ${ssm:/secrets/${self:provider.stage}/jwt_secret_key}
    POSTGRES_HOST: ${ssm:/terraform/${self:provider.stage}/rds/endpoint}
    POSTGRES_PORT: ${ssm:/terraform/${self:provider.stage}/rds/port}
    POSTGRES_DB: ${ssm:/terraform/${self:provider.stage}/rds/db_name}
    POSTGRES_USER: ${ssm:/terraform/${self:provider.stage}/rds/db_username}
    POSTGRES_PASSWORD: ${ssm:/terraform/${self:provider.stage}/rds/db_password}
    SERVICE_NAME: ${self:service}

functions:
  logout:
    name: ${self:provider.stage}-authentication-logout
    image:
      name: default
      command:
        - logout.handler
    events:
      - http:
          path: /logout
          method: POST
          cors:
            origins: "http://127.0.0.1:5173"
            allowCredentials: true

  google:
    name: ${self:provider.stage}-authentication-google
    image:
      name: default
      command:
        - google.handler
    events:
      - http:
          path: /login/google
          method: POST
          cors:
            origins: "http://127.0.0.1:5173"
            allowCredentials: true

plugins:
  - serverless-deployment-bucket
