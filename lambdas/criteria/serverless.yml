service: criteria

frameworkVersion: "3"

provider:
  name: aws
  runtime: python3.9
  architecture: arm64
  stage: dev
  region: us-east-1
  deploymentBucket:
    name: ${self:provider.stage}-sls-criteria
  iam:
    role: ${ssm:/terraform/shared/iam/lambda_role_arn}
  apiGateway:
    restApiId: ${ssm:/terraform/${self:provider.stage}/api_gateway/id}
    restApiRootResourceId: ${ssm:/terraform/${self:provider.stage}/api_gateway/root_resource_id}
  ecr:
    images:
      default:
        path: ./
        file: Dockerfile
        buildArgs:
  environment:
    ENVIRONMENT: ${self:provider.stage}
    OPENAI_API_KEY: ${ssm:/api/openai_api_key}
    GITHUB_TOKEN: ${ssm:/api/github_token}
    POSTGRES_HOST: ${ssm:/terraform/${self:provider.stage}/rds/endpoint}
    POSTGRES_PORT: ${ssm:/terraform/${self:provider.stage}/rds/port}
    POSTGRES_DB: ${ssm:/terraform/${self:provider.stage}/rds/db_name}
    POSTGRES_USER: ${ssm:/terraform/${self:provider.stage}/rds/db_username}
    POSTGRES_PASSWORD: ${ssm:/terraform/${self:provider.stage}/rds/db_password}

functions:
  evaluate:
    name: ${self:provider.stage}-criteria-evaluate
    timeout: 30
    image:
      name: default
      command:
        - evaluate.handler
    events:
      - http:
          path: /evaluate
          method: POST

  generate:
    name: ${self:provider.stage}-criteria-generate
    image:
      name: default
      command:
        - generate.handler
    events:
      - http:
          path: /generate
          method: POST

  retrieve:
    name: ${self:provider.stage}-criteria-retrieve
    image:
      name: default
      command:
        - retrieve.handler
    events:
      - http:
          path: /criteria/{id}
          method: GET
          request:
            parameters:
              paths:
                id: true

plugins:
  - serverless-deployment-bucket
