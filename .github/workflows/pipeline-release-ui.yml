name: Prepare UI Release

on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened]

jobs:
  prepare-ui-release:
    runs-on: ubuntu-latest
    if: github.head_ref == '405-feat-ci-set-up-ui-release-pipeline' && github.base_ref == 'main'
    steps:
      - name: Checkout develop branch
        uses: actions/checkout@v2
        with:
          ref: '405-feat-ci-set-up-ui-release-pipeline'
          fetch-depth: 0

      - name: Setup Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Cherry-pick commits to release-ui
        id: cherry-pick
        run: |
          git fetch origin release-ui
          git checkout -b temp-release-ui origin/release-ui

          set +e  # Disable error stopping
          conflict_found=false
          commit_messages=""

          for commit in $(git log --grep='feat(ui)\|fix(ui)\|chore(ui)' --format="%H" origin/develop); do
            git cherry-pick $commit
            if [ $? -ne 0 ]; then
              echo "Merge conflict detected in commit $commit. Exiting."
              conflict_found=true
              break
            fi
            commit_messages+=$(git log -1 --format="%h %s%n")
          done

          if [ "$conflict_found" = true ]; then
            git reset --hard
            git checkout develop
            exit 1
          fi

          set -e  # Re-enable error stopping
          echo "::set-output name=commit_messages::$commit_messages"

      - name: Push changes to release-ui
        if: steps.cherry-pick.outputs.conflict_found != 'true'
        run: |
          git push origin temp-release-ui:release-ui

      - name: Comment on PR with list of commits
        if: steps.cherry-pick.outputs.conflict_found != 'true'
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issue_number = context.issue.number;
            const comment = `Cherry-picked commits:\n${{ steps.cherry-pick.outputs.commit_messages }}`;
            github.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
              body: comment
            });
