on:
  workflow_call:
    inputs:
      environment:
        description: Environment to deploy to in lowercase.
        required: true
        type: string
      environment-label:
        description: Environment to deploy to in capitalized.
        required: true
        type: string
      component:
        description: "Component to deploy"
        required: true
        type: string
      label:
        description: "Label for the job"
        required: true
        type: string

jobs:
  run:
    name: ${{ inputs.label }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment-label }}
    steps:
      - name: Fetch Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup SSH Key (Environment)
        if: inputs.component == 'environment'
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PUBLIC_KEY }}" > ~/.ssh/id_rsa_matchya.pub
          chmod 600 ~/.ssh/id_rsa_matchya.pub

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init
        working-directory: terraform/${{ inputs.component }}

      - name: Select Workspace (Environment)
        if: inputs.component == 'environment'
        run: |
          terraform workspace select ${{ inputs.environment }}
        working-directory: terraform/${{ inputs.component }}

      - name: Set Terraform Variables (Environment)
        if: inputs.component == 'environment'
        run: |
          echo 'hosted_zone = "${{ vars.TF_HOSTED_ZONE }}"' > terraform.tfvars
          echo 'db_username = "${{ secrets.TF_DB_USERNAME }}"' >> terraform.tfvars
          echo 'db_password = "${{ secrets.TF_DB_PASSWORD }}"' >> terraform.tfvars
        working-directory: terraform/${{ inputs.component }}

      - name: Set Terraform Variables (Shared)
        if: inputs.component == 'shared'
        run: |
          IFS=',' read -ra google_workspace_records_mx <<< "${{ vars.GOOGLE_WORKSPACE_RECORDS_MX }}"
          echo 'hosted_zone = "${{ vars.TF_HOSTED_ZONE }}"' > terraform.tfvars
          echo 'google_workspace_records = { "mx" = [' >> terraform.tfvars
          for record in "${google_workspace_records_mx[@]}"; do
            echo "\"$record\"," >> terraform.tfvars
          done
          echo '] }' >> terraform.tfvars
          IFS=',' read -ra webflow_records_a <<< "${{ vars.WEBFLOW_RECORDS_A }}"
          echo 'webflow_records = { "txt" = ["${{ vars.WEBFLOW_RECORDS_TXT }}"], "a" = [' >> terraform.tfvars
          for record in "${webflow_records_a[@]}"; do
            echo "\"$record\"," >> terraform.tfvars
          done
          echo '] }' >> terraform.tfvars
          echo 'www_webflow_records = { "cname" = ["${{ vars.WWW_WEBFLOW_RECORDS_CNAME }}"] }' >> terraform.tfvars
          echo 'sendgrid_cname_1_name = "${{ vars.SENDGRID_CNAME_1_NAME }}"' >> terraform.tfvars
          echo 'sendgrid_cname_1_record = "${{ vars.SENDGRID_CNAME_1_RECORD }}"' >> terraform.tfvars
          echo 'sendgrid_cname_2_name = "${{ vars.SENDGRID_CNAME_2_NAME }}"' >> terraform.tfvars
          echo 'sendgrid_cname_2_record = "${{ vars.SENDGRID_CNAME_2_RECORD }}"' >> terraform.tfvars
          echo 'sendgrid_cname_3_name = "${{ vars.SENDGRID_CNAME_3_NAME }}"' >> terraform.tfvars
          echo 'sendgrid_cname_3_record = "${{ vars.SENDGRID_CNAME_3_RECORD }}"' >> terraform.tfvars
          echo 'sendgrid_cname_4_name = "${{ vars.SENDGRID_CNAME_4_NAME }}"' >> terraform.tfvars
          echo 'sendgrid_cname_4_record = "${{ vars.SENDGRID_CNAME_4_RECORD }}"' >> terraform.tfvars
          echo 'sendgrid_cname_5_name = "${{ vars.SENDGRID_CNAME_5_NAME }}"' >> terraform.tfvars
          echo 'sendgrid_cname_5_record = "${{ vars.SENDGRID_CNAME_5_RECORD }}"' >> terraform.tfvars
          echo 'sendgrid_txt_name = "${{ vars.SENDGRID_TXT_NAME }}"' >> terraform.tfvars
          echo 'sendgrid_txt_record = "${{ vars.SENDGRID_TXT_RECORD }}"' >> terraform.tfvars
        working-directory: terraform/${{ inputs.component }}

      - name: Terraform Plan
        id: plan
        run: |
          terraform plan -out=${{ inputs.component }}.tfplan -no-color | tee plan_output.txt
        working-directory: terraform/${{ inputs.component }}

      - name: Upload Terraform Plan to S3
        run: aws s3 cp terraform/${{ inputs.component }}/${{ inputs.component }}.tfplan s3://matchya-terraform/github-actions-artifacts/${{ inputs.environment }}/plans/${{ inputs.component }}.tfplan

      - name: Comment PR
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const output = fs.readFileSync('terraform/${{ inputs.component }}/plan_output.txt', 'utf8');
            github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: '```terraform\n' + output + '\n```'
            })
